name: Sync Upstream Momogram APKs (including pre-releases)

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  sync_apks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Get latest release info (including pre-releases)
        id: get_release
        run: |
          # Busca la release más reciente, incluidas pre-releases
          releases=$(curl -s "https://api.github.com/repos/dic1911/Momogram/releases?per_page=5")
          # Busca la release más reciente (primer elemento del array)
          echo "$releases" | jq '.[0]' > release.json
          tag=$(jq -r .tag_name release.json)
          echo "tag=$tag" >> $GITHUB_ENV

      - name: Download APKs
        run: |
          mkdir -p repo
          for ARCH in arm64-v8a armeabi-v7a; do
            url=$(jq -r --arg arch $ARCH '.assets[] | select(.name | test($arch)) | .browser_download_url' release.json)
            if [ -n "$url" ] && [ "$url" != "null" ]; then
              name=$(basename "$url")
              echo "Downloading $name"
              curl -L "$url" -o "repo/$name"
            else
              echo "No APK found for $ARCH"
            fi
          done

      - name: Set up git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit and push if new APKs
        run: |
          git add repo/
          if git diff --cached --quiet; then
            echo "No new APKs to commit."
            exit 0
          fi
          git commit -m "Sync APKs from Momogram release ${{ env.tag }}"
          git push